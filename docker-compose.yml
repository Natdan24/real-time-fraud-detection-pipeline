version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # ── TWO listeners ──────────────────────────────────
      # 1) PLAINTEXT  → used by other containers
      # 2) PLAINTEXT_HOST → used by your Windows host
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"   # internal
      - "29092:29092" # host-exposed

  redis:
    image: redis:6.2
    container_name: fraud-redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  api:
    build: .
    container_name: fraud-api
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      # Redis feature store
      REDIS_HOST: redis
      REDIS_PORT: "6379"

      # Postgres (for SQL analytics endpoints)
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_DB:    fraud_db
      POSTGRES_USER:  postgres
      POSTGRES_PASSWORD: password

      # LM Studio Mistral 7B endpoint
      LMSTUDIO_URL:   "http://host.docker.internal:1234/v1/generate"
      LMSTUDIO_MODEL: "mistral-7b"
  
  prometheus:
    image: prom/prometheus:latest
    container_name: fraud-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.external-url=http://localhost:9090"
    ports:
      - "9090:9090"
    depends_on:
      - alertmanager
      - api


  alertmanager:
    image: prom/alertmanager:latest
    container_name: fraud-alertmanager
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml:ro
    command:
      - "--config.file=/etc/alertmanager/config.yml"
    ports:
      - "9093:9093"

    

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  postgres:
    image: postgres:15-alpine
    container_name: fraud-postgres
    environment:
      POSTGRES_DB:       fraud_db
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: password
      # you can also set POSTGRES_HOST_AUTH_METHOD=trust if you prefer
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: fraud-schema-registry
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    ports:
      - "8081:8081"
    


volumes:
  redis-data:
  pgdata:
